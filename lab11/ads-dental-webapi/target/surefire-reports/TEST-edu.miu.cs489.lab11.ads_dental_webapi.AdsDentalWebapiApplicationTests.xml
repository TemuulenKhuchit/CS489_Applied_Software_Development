<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="edu.miu.cs489.lab11.ads_dental_webapi.AdsDentalWebapiApplicationTests" time="6.82" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="25"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi\target\test-classes;D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi\target\classes;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.6\spring-boot-starter-data-jpa-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.6\spring-boot-starter-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot\3.5.6\spring-boot-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.6\spring-boot-autoconfigure-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.6\spring-boot-starter-logging-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\TemuulenKhuchit\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.6\spring-boot-starter-jdbc-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\zaxxer\HikariCP\6.3.3\HikariCP-6.3.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-jdbc\6.2.11\spring-jdbc-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\hibernate\orm\hibernate-core\6.6.29.Final\hibernate-core-6.6.29.Final.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\TemuulenKhuchit\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\bytebuddy\byte-buddy\1.17.7\byte-buddy-1.17.7.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\data\spring-data-jpa\3.5.4\spring-data-jpa-3.5.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\data\spring-data-commons\3.5.4\spring-data-commons-3.5.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-orm\6.2.11\spring-orm-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-context\6.2.11\spring-context-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-aop\6.2.11\spring-aop-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-tx\6.2.11\spring-tx-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-beans\6.2.11\spring-beans-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-aspects\6.2.11\spring-aspects-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.5.6\spring-boot-starter-web-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.5.6\spring-boot-starter-json-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.2\jackson-databind-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.2\jackson-annotations-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.2\jackson-core-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.19.2\jackson-datatype-jdk8-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.19.2\jackson-datatype-jsr310-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.19.2\jackson-module-parameter-names-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.5.6\spring-boot-starter-tomcat-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.46\tomcat-embed-core-10.1.46.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.46\tomcat-embed-el-10.1.46.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.46\tomcat-embed-websocket-10.1.46.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-web\6.2.11\spring-web-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\io\micrometer\micrometer-observation\1.15.4\micrometer-observation-1.15.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\io\micrometer\micrometer-commons\1.15.4\micrometer-commons-1.15.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-webmvc\6.2.11\spring-webmvc-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-expression\6.2.11\spring-expression-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\postgresql\postgresql\42.7.8\postgresql-42.7.8.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\checkerframework\checker-qual\3.49.5\checker-qual-3.49.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\projectlombok\lombok\1.18.40\lombok-1.18.40.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.6\spring-boot-starter-test-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-test\3.5.6\spring-boot-test-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.6\spring-boot-test-autoconfigure-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.4\jakarta.activation-api-2.1.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\assertj\assertj-core\3.27.4\assertj-core-3.27.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.7\byte-buddy-agent-1.17.7.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-core\6.2.11\spring-core-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-jcl\6.2.11\spring-jcl-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-test\6.2.11\spring-test-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\xmlunit\xmlunit-core\2.10.4\xmlunit-core-2.10.4.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="25"/>
    <property name="APPLICATION_NAME" value="ads-dental-webapi"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-25\bin"/>
    <property name="sun.java.command" value="C:\Users\TemuulenKhuchit\AppData\Local\Temp\surefire17895024118685395826\surefirebooter-20251024170021980_3.jar C:\Users\TemuulenKhuchit\AppData\Local\Temp\surefire17895024118685395826 2025-10-24T17-00-21_849-jvmRun1 surefire-20251024170021980_1tmp surefire_0-20251024170021980_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi\target\test-classes;D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi\target\classes;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.6\spring-boot-starter-data-jpa-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.6\spring-boot-starter-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot\3.5.6\spring-boot-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.6\spring-boot-autoconfigure-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.6\spring-boot-starter-logging-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\TemuulenKhuchit\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.6\spring-boot-starter-jdbc-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\zaxxer\HikariCP\6.3.3\HikariCP-6.3.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-jdbc\6.2.11\spring-jdbc-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\hibernate\orm\hibernate-core\6.6.29.Final\hibernate-core-6.6.29.Final.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\TemuulenKhuchit\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\bytebuddy\byte-buddy\1.17.7\byte-buddy-1.17.7.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\data\spring-data-jpa\3.5.4\spring-data-jpa-3.5.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\data\spring-data-commons\3.5.4\spring-data-commons-3.5.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-orm\6.2.11\spring-orm-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-context\6.2.11\spring-context-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-aop\6.2.11\spring-aop-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-tx\6.2.11\spring-tx-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-beans\6.2.11\spring-beans-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-aspects\6.2.11\spring-aspects-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.5.6\spring-boot-starter-web-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.5.6\spring-boot-starter-json-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.2\jackson-databind-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.2\jackson-annotations-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.2\jackson-core-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.19.2\jackson-datatype-jdk8-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.19.2\jackson-datatype-jsr310-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.19.2\jackson-module-parameter-names-2.19.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.5.6\spring-boot-starter-tomcat-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.46\tomcat-embed-core-10.1.46.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.46\tomcat-embed-el-10.1.46.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.46\tomcat-embed-websocket-10.1.46.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-web\6.2.11\spring-web-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\io\micrometer\micrometer-observation\1.15.4\micrometer-observation-1.15.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\io\micrometer\micrometer-commons\1.15.4\micrometer-commons-1.15.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-webmvc\6.2.11\spring-webmvc-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-expression\6.2.11\spring-expression-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\postgresql\postgresql\42.7.8\postgresql-42.7.8.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\checkerframework\checker-qual\3.49.5\checker-qual-3.49.5.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\projectlombok\lombok\1.18.40\lombok-1.18.40.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.6\spring-boot-starter-test-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-test\3.5.6\spring-boot-test-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.6\spring-boot-test-autoconfigure-3.5.6.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.4\jakarta.activation-api-2.1.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\assertj\assertj-core\3.27.4\assertj-core-3.27.4.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.7\byte-buddy-agent-1.17.7.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\TemuulenKhuchit\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-core\6.2.11\spring-core-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-jcl\6.2.11\spring-jcl-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\springframework\spring-test\6.2.11\spring-test-6.2.11.jar;C:\Users\TemuulenKhuchit\.m2\repository\org\xmlunit\xmlunit-core\2.10.4\xmlunit-core-2.10.4.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\TemuulenKhuchit"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-09-16"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-25"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\TemuulenKhuchit\AppData\Local\Temp\surefire17895024118685395826\surefirebooter-20251024170021980_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="25+37-LTS-3491"/>
    <property name="user.name" value="TemuulenKhuchit"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\TemuulenKhuchit\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\TEMUUL~1\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="25"/>
    <property name="user.dir" value="D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="18884"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\OracleApp\WINDOWS.X64_193000_db_home\bin;C:\Program Files (x86)\VMware\VMware Player\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\PostgreSQL\15\bin;C:\Program Files\nodejs\;C:\php-8.3.6;C:\Users\temuulen.kh\AppData\Local\Programs\Python\Python312\python.exe;C:\Users\temuulen.kh\Documents\instantclient-23.4.0.24.05\instantclient_23_4;C:\Program Files\Java\jdk-25\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\PuTTY\;C:\Users\TemuulenKhuchit\AppData\Local\Programs\oh-my-posh\bin;C:\Program Files\apache-maven-3.9.11\bin;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\PostgreSQL\18\bin;D:\OracleApp\WINDOWS.X64_193000_db_home\bin;C:\Program Files (x86)\VMware\VMware Player\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\PostgreSQL\15\bin;C:\Program Files\nodejs\;C:\php-8.3.6;C:\Users\temuulen.kh\AppData\Local\Programs\Python\Python312\python.exe;C:\Users\temuulen.kh\Documents\instantclient-23.4.0.24.05\instantclient_23_4;C:\Program Files\Java\jdk-25\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\PuTTY\;C:\Users\TemuulenKhuchit\AppData\Local\Programs\oh-my-posh\bin;C:\Program Files\apache-maven-3.9.11\bin;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;D:\OracleApp\WINDOWS.X64_193000_db_home\bin;C:\Program Files (x86)\VMware\VMware Player\bin\;C:\Program Files\Common Files\O;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25+37-LTS-3491"/>
    <property name="stdin.encoding" value="Cp1252"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="69.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[ads-dental-webapi] "/>
  </properties>
  <testcase name="contextLoads" classname="edu.miu.cs489.lab11.ads_dental_webapi.AdsDentalWebapiApplicationTests" time="0.364">
    <system-out><![CDATA[17:00:23.159 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [edu.miu.cs489.lab11.ads_dental_webapi.AdsDentalWebapiApplicationTests]: AdsDentalWebapiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
17:00:23.308 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration edu.miu.cs489.lab11.ads_dental_webapi.AdsDentalWebapiApplication for test class edu.miu.cs489.lab11.ads_dental_webapi.AdsDentalWebapiApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.6)

2025-10-24T17:00:23.772-05:00  INFO 18884 --- [ads-dental-webapi] [           main] .m.c.l.a.AdsDentalWebapiApplicationTests : Starting AdsDentalWebapiApplicationTests using Java 25 with PID 18884 (started by TemuulenKhuchit in D:\5. MIU\CS489-Applied Software Development\Labs\lab11\ads-dental-webapi)
2025-10-24T17:00:23.773-05:00  INFO 18884 --- [ads-dental-webapi] [           main] .m.c.l.a.AdsDentalWebapiApplicationTests : No active profile set, falling back to 1 default profile: "default"
2025-10-24T17:00:24.807-05:00  INFO 18884 --- [ads-dental-webapi] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-24T17:00:24.934-05:00  INFO 18884 --- [ads-dental-webapi] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 114 ms. Found 7 JPA repository interfaces.
2025-10-24T17:00:25.621-05:00  INFO 18884 --- [ads-dental-webapi] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-24T17:00:25.688-05:00  INFO 18884 --- [ads-dental-webapi] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.29.Final
2025-10-24T17:00:25.728-05:00  INFO 18884 --- [ads-dental-webapi] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-10-24T17:00:26.112-05:00  INFO 18884 --- [ads-dental-webapi] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-24T17:00:26.216-05:00  INFO 18884 --- [ads-dental-webapi] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-10-24T17:00:26.495-05:00  INFO 18884 --- [ads-dental-webapi] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4300e240
2025-10-24T17:00:26.496-05:00  INFO 18884 --- [ads-dental-webapi] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-10-24T17:00:26.535-05:00  WARN 18884 --- [ads-dental-webapi] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-24T17:00:26.553-05:00  INFO 18884 --- [ads-dental-webapi] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 18.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-24T17:00:27.911-05:00  INFO 18884 --- [ads-dental-webapi] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-24T17:00:27.924-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
2025-10-24T17:00:27.926-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       drop constraint if exists FKqsnula0nj86s67otibu2j2hsv
Hibernate: 
    alter table if exists appointments 
       drop constraint if exists FKqsnula0nj86s67otibu2j2hsv
2025-10-24T17:00:27.930-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       drop constraint if exists FK8exap5wmg8kmb1g1rx3by21yt
Hibernate: 
    alter table if exists appointments 
       drop constraint if exists FK8exap5wmg8kmb1g1rx3by21yt
2025-10-24T17:00:27.931-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       drop constraint if exists FK68v0hdkvl8qnssll24tmugia6
Hibernate: 
    alter table if exists appointments 
       drop constraint if exists FK68v0hdkvl8qnssll24tmugia6
2025-10-24T17:00:27.932-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists patients 
       drop constraint if exists FKjc8017x8ae0rqi11m8jmny646
Hibernate: 
    alter table if exists patients 
       drop constraint if exists FKjc8017x8ae0rqi11m8jmny646
2025-10-24T17:00:27.934-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists surgeries 
       drop constraint if exists FK51c727fvh92teps6wulnss1hs
Hibernate: 
    alter table if exists surgeries 
       drop constraint if exists FK51c727fvh92teps6wulnss1hs
2025-10-24T17:00:27.935-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists users_roles 
       drop constraint if exists FKj6m8fwv7oqv74fcehir1a9ffy
Hibernate: 
    alter table if exists users_roles 
       drop constraint if exists FKj6m8fwv7oqv74fcehir1a9ffy
2025-10-24T17:00:27.936-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists users_roles 
       drop constraint if exists FK2o0jvgh89lemvvo17cbqvdxaa
Hibernate: 
    alter table if exists users_roles 
       drop constraint if exists FK2o0jvgh89lemvvo17cbqvdxaa
2025-10-24T17:00:27.937-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists addresses cascade
Hibernate: 
    drop table if exists addresses cascade
2025-10-24T17:00:27.943-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists appointments cascade
Hibernate: 
    drop table if exists appointments cascade
2025-10-24T17:00:27.949-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists dentists cascade
Hibernate: 
    drop table if exists dentists cascade
2025-10-24T17:00:27.953-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists patients cascade
Hibernate: 
    drop table if exists patients cascade
2025-10-24T17:00:27.959-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists roles cascade
Hibernate: 
    drop table if exists roles cascade
2025-10-24T17:00:27.963-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists surgeries cascade
Hibernate: 
    drop table if exists surgeries cascade
2025-10-24T17:00:27.968-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists users cascade
Hibernate: 
    drop table if exists users cascade
2025-10-24T17:00:27.971-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    drop table if exists users_roles cascade
Hibernate: 
    drop table if exists users_roles cascade
2025-10-24T17:00:27.979-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table addresses (
        id bigint generated by default as identity,
        city varchar(255) not null,
        postal_code varchar(255) not null,
        street varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table addresses (
        id bigint generated by default as identity,
        city varchar(255) not null,
        postal_code varchar(255) not null,
        street varchar(255) not null,
        primary key (id)
    )
2025-10-24T17:00:27.994-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table appointments (
        appointment_date date not null,
        appointment_time time(6) not null,
        dentist_id bigint not null,
        id bigint generated by default as identity,
        patient_id bigint not null,
        surgery_id bigint not null,
        primary key (id)
    )
Hibernate: 
    create table appointments (
        appointment_date date not null,
        appointment_time time(6) not null,
        dentist_id bigint not null,
        id bigint generated by default as identity,
        patient_id bigint not null,
        surgery_id bigint not null,
        primary key (id)
    )
2025-10-24T17:00:28.000-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table dentists (
        id bigint generated by default as identity,
        dentist_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table dentists (
        id bigint generated by default as identity,
        dentist_name varchar(255) not null,
        primary key (id)
    )
2025-10-24T17:00:28.005-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table patients (
        address_id bigint not null unique,
        id bigint generated by default as identity,
        patient_no varchar(10) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        primary key (id),
        unique (patient_no)
    )
Hibernate: 
    create table patients (
        address_id bigint not null unique,
        id bigint generated by default as identity,
        patient_no varchar(10) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        primary key (id),
        unique (patient_no)
    )
2025-10-24T17:00:28.014-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table roles (
        id bigint generated by default as identity,
        name varchar(40) not null,
        primary key (id),
        unique (name)
    )
Hibernate: 
    create table roles (
        id bigint generated by default as identity,
        name varchar(40) not null,
        primary key (id),
        unique (name)
    )
2025-10-24T17:00:28.021-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table surgeries (
        address_id bigint not null unique,
        id bigint generated by default as identity,
        surgery_no varchar(10) not null,
        primary key (id),
        unique (surgery_no)
    )
Hibernate: 
    create table surgeries (
        address_id bigint not null unique,
        id bigint generated by default as identity,
        surgery_no varchar(10) not null,
        primary key (id),
        unique (surgery_no)
    )
2025-10-24T17:00:28.027-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table users (
        id bigint generated by default as identity,
        username varchar(60) not null,
        password varchar(255) not null,
        primary key (id),
        unique (username)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        username varchar(60) not null,
        password varchar(255) not null,
        primary key (id),
        unique (username)
    )
2025-10-24T17:00:28.032-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    )
Hibernate: 
    create table users_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    )
2025-10-24T17:00:28.036-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create index IDXfekijklit8836sb9ikdq208kv 
       on appointments (appointment_date)
Hibernate: 
    create index IDXfekijklit8836sb9ikdq208kv 
       on appointments (appointment_date)
2025-10-24T17:00:28.039-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    create index IDX6t8xh1tjlp8a8gdpgh22opg7m 
       on appointments (appointment_time)
Hibernate: 
    create index IDX6t8xh1tjlp8a8gdpgh22opg7m 
       on appointments (appointment_time)
2025-10-24T17:00:28.042-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       add constraint FKqsnula0nj86s67otibu2j2hsv 
       foreign key (dentist_id) 
       references dentists
Hibernate: 
    alter table if exists appointments 
       add constraint FKqsnula0nj86s67otibu2j2hsv 
       foreign key (dentist_id) 
       references dentists
2025-10-24T17:00:28.047-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       add constraint FK8exap5wmg8kmb1g1rx3by21yt 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists appointments 
       add constraint FK8exap5wmg8kmb1g1rx3by21yt 
       foreign key (patient_id) 
       references patients
2025-10-24T17:00:28.051-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists appointments 
       add constraint FK68v0hdkvl8qnssll24tmugia6 
       foreign key (surgery_id) 
       references surgeries
Hibernate: 
    alter table if exists appointments 
       add constraint FK68v0hdkvl8qnssll24tmugia6 
       foreign key (surgery_id) 
       references surgeries
2025-10-24T17:00:28.055-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists patients 
       add constraint FKjc8017x8ae0rqi11m8jmny646 
       foreign key (address_id) 
       references addresses
Hibernate: 
    alter table if exists patients 
       add constraint FKjc8017x8ae0rqi11m8jmny646 
       foreign key (address_id) 
       references addresses
2025-10-24T17:00:28.057-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists surgeries 
       add constraint FK51c727fvh92teps6wulnss1hs 
       foreign key (address_id) 
       references addresses
Hibernate: 
    alter table if exists surgeries 
       add constraint FK51c727fvh92teps6wulnss1hs 
       foreign key (address_id) 
       references addresses
2025-10-24T17:00:28.059-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles
Hibernate: 
    alter table if exists users_roles 
       add constraint FKj6m8fwv7oqv74fcehir1a9ffy 
       foreign key (role_id) 
       references roles
2025-10-24T17:00:28.063-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists users_roles 
       add constraint FK2o0jvgh89lemvvo17cbqvdxaa 
       foreign key (user_id) 
       references users
2025-10-24T17:00:28.068-05:00  INFO 18884 --- [ads-dental-webapi] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-24T17:00:28.693-05:00  WARN 18884 --- [ads-dental-webapi] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-24T17:00:29.233-05:00  INFO 18884 --- [ads-dental-webapi] [           main] .m.c.l.a.AdsDentalWebapiApplicationTests : Started AdsDentalWebapiApplicationTests in 5.77 seconds (process running for 7.132)
2025-10-24T17:00:29.279-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        dentists
        (dentist_name) 
    values
        (?)
Hibernate: 
    insert 
    into
        dentists
        (dentist_name) 
    values
        (?)
2025-10-24T17:00:29.342-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        dentists
        (dentist_name) 
    values
        (?)
Hibernate: 
    insert 
    into
        dentists
        (dentist_name) 
    values
        (?)
2025-10-24T17:00:29.345-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        dentists
        (dentist_name) 
    values
        (?)
Hibernate: 
    insert 
    into
        dentists
        (dentist_name) 
    values
        (?)
2025-10-24T17:00:29.351-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.354-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        surgeries
        (address_id, surgery_no) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        surgeries
        (address_id, surgery_no) 
    values
        (?, ?)
2025-10-24T17:00:29.359-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.361-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        surgeries
        (address_id, surgery_no) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        surgeries
        (address_id, surgery_no) 
    values
        (?, ?)
2025-10-24T17:00:29.363-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.365-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        surgeries
        (address_id, surgery_no) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        surgeries
        (address_id, surgery_no) 
    values
        (?, ?)
2025-10-24T17:00:29.367-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.369-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
2025-10-24T17:00:29.373-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.375-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
2025-10-24T17:00:29.378-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.379-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
2025-10-24T17:00:29.382-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        addresses
        (city, postal_code, street) 
    values
        (?, ?, ?)
2025-10-24T17:00:29.384-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patients
        (address_id, first_name, last_name, patient_no) 
    values
        (?, ?, ?, ?)
2025-10-24T17:00:29.388-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
2025-10-24T17:00:29.392-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
2025-10-24T17:00:29.394-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
2025-10-24T17:00:29.396-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
2025-10-24T17:00:29.398-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
2025-10-24T17:00:29.401-05:00 DEBUG 18884 --- [ads-dental-webapi] [           main] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        appointments
        (appointment_date, appointment_time, dentist_id, patient_id, surgery_id) 
    values
        (?, ?, ?, ?, ?)
✅ Sample data successfully loaded into ADS Dental CLI database!
]]></system-out>
    <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build as described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org.mockito/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (C:\Users\TemuulenKhuchit\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.7\byte-buddy-agent-1.17.7.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
</testsuite>